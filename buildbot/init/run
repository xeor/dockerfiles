#!/bin/bash

# PID, trap, wait; all belongs to 'docker stop' signal handeling.
# This is the same logic as the parent docker container, but either this,
# or creating a one-time process in supervisord to handle this logic.
PID=; trap '[[ ${PID} ]] && kill ${PID}; exit 0' SIGTERM
/usr/bin/supervisord -n -c /etc/supervisord.conf -e ${LOGLEVEL:-error} & PID=$!

# We need to wait for supervisord to start up, or we will get an error soon
# when we are trying to start up services below. supervisord startup delay isnt
# in effect since we are sending it to the backround..
echo -n "Waiting for supervisord to start"
while [[ ! -e /var/tmp/supervisor.sock ]]; do echo -n "."; sleep 0.1; done
echo " OK"

if [[ ${IS_MASTER} ]]; then
  echo "Starting buildbot master"
  supervisorctl start buildbot-master
else
  echo "Starting buildbot slave"
  supervisorctl start buildbot-slave
fi

wait
