#!/bin/bash

set -u

function get_env {
  name=${1}
  [[ ${name} ]] || return

  # Still, I think this is cleaner than using awk to do this, even tho it might be shorter :)
  value=$(python -c "import json; print ' '.join([ i.split('=')[1] for i in json.load(open(\"/${json_file}\", 'r'))['Config']['Env'] if i.startswith(\"${name}\") ])")
  [[ ${value} ]] && echo ${value} || echo "${2}"
}

[[ -f /run/nginx.pid ]] || /usr/sbin/nginx
json_file="/inspects/${2}_start.json"
[[ -f ${json_file} ]] || json_file="/inspects/${2}_create.json"
[[ -f ${json_file} ]] || json_file="/inspects/${2}_running.json"

domain=$(get_env ACT_WEBFEWD)
removeondie=$(get_env WEBFEWD_REMOVEONDIE)

# There can be multiple host-ports.. But this is suposed to be a simple thing. For now, just worry about the first.
hostport=$(python -c "import json; print json.load(open(\"${json_file}\", 'r'))['NetworkSettings']['Ports']['80/tcp'][0]['HostPort']")

# Check port 8080 if 80 didnt do it. 8080 is too common to ignore :)
[[ ${hostport} ]] || hostport=$(python -c "import json; print json.load(open(\"${json_file}\", 'r'))['NetworkSettings']['Ports']['8080/tcp'][0]['HostPort']")

case ${3} in
  start|running)
    areweready=false
    if [[ -x "/WEBFEWD_nginx_reload_ready" ]]; then
      echo "Running WEBFEWD_nginx_reload_ready to check if we are ready to reload nginx"
      for i in $(seq 1 ${WEBFEWD_nginx_reload_check_max:-30}); do
        if /WEBFEWD_nginx_reload_ready ${hostport} &> /dev/null; then
          echo ok
          areweready=true
          break
        else
          echo -n .
        fi
      done
    else
      areweready=true
    fi
if ${areweready}; then
cat << EOF > /etc/nginx/conf.d/${domain}.conf
server {
  server_name ${domain};
  listen 8888;
  location / {
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_pass http://localhost:${hostport};
  }
}
EOF
    /usr/sbin/nginx -s reload
else
  echo "$(date) We never became ready to replace nginx config for ${domain} on port ${hostport}" >> worker-err.log
fi
    ;;
  die)
    [[ ${removeondie} ]] || exit 1
    rm -f /etc/nginx/conf.d/${domain}.conf
    /usr/sbin/nginx -s reload
esac
